
// components/multi-line-chart.tsx
"use client"

import { Line, LineChart, XAxis, YAxis, CartesianGrid, ResponsiveContainer } from "recharts"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { ChartContainer, ChartTooltip, ChartTooltipContent } from "@/components/ui/chart"

type DataPoint = [string, number[], number[]]

interface LineConfig {
  label: string
  color: string
}

interface MultiLineChartProps {
  data: DataPoint[]
  lines: LineConfig[]
  title: string
  description?: string
}

export function MultiLineChart({ data, lines, title, description }: MultiLineChartProps) {
  const formattedData = data[0][1].map((_, index) => {
    const obj: { [key: string]: string | number } = { xAxis: data[0][1][index] }
    lines.forEach((line, lineIndex) => {
      obj[line.label] = data[lineIndex + 1][2][index]
    })
    return obj
  })

  const config = lines.reduce((acc, line) => {
    acc[line.label] = {
      label: line.label,
      color: line.color,
    }
    return acc
  }, {} as Record<string, { label: string; color: string }>)

  return (
    <Card className="w-full">
      <CardHeader>
        <CardTitle>{title}</CardTitle>
        {description && <CardDescription>{description}</CardDescription>}
      </CardHeader>
      <CardContent>
        <ChartContainer config={config} className="w-full aspect-[4/3]">
          <ResponsiveContainer width="100%" height="100%">
            <LineChart data={formattedData} margin={{ top: 10, right: 10, left: 10, bottom: 20 }}>
              <CartesianGrid strokeDasharray="3 3" />
              <XAxis
                dataKey="xAxis"
                tickLine={false}
                axisLine={false}
                tickMargin={8}
                tick={{ fill: 'hsl(var(--foreground))' }}
              />
              <YAxis
                tickLine={false}
                axisLine={false}
                tickMargin={8}
                tick={{ fill: 'hsl(var(--foreground))' }}
                width={40}
              />
              <ChartTooltip content={<ChartTooltipContent />} />
              {lines.map((line) => (
                <Line
                  key={line.label}
                  type="monotone"
                  dataKey={line.label}
                  stroke={line.color}
                  strokeWidth={2}
                  dot={{ fill: line.color, strokeWidth: 2 }}
                />
              ))}
            </LineChart>
          </ResponsiveContainer>
        </ChartContainer>
      </CardContent>
    </Card>
  )
}



// pages/page.tsx
import { MultiLineChart } from "@/components/multi-line-chart"

const data: [string, number[], number[]][] = [
  ["Months", [1, 2, 3, 4, 5, 6, 7], []], // x-axis data
  ["Sales", [], [4000, 3000, 2000, 2780, 1890, 2390, 3490]],
  ["Profit", [], [2400, 1398, 9800, 3908, 4800, 3800, 4300]],
  ["Revenue", [], [2400, 2210, 2290, 2000, 2181, 2500, 2100]],
]

const lines = [
  { label: "Sales", color: "hsl(var(--primary))" },
  { label: "Profit", color: "hsl(var(--secondary))" },
  { label: "Revenue", color: "hsl(var(--accent))" },
]

export default function Page() {
  return (
    <div className="container mx-auto p-4">
      <MultiLineChart
        data={data}
        lines={lines}
        title="Company Performance"
        description="Monthly sales, profit, and revenue data"
      />
    </div>
  )
}

// v2 multi-line-chart
"use client"

import { Line, LineChart, XAxis, YAxis, CartesianGrid, ResponsiveContainer } from "recharts"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { ChartContainer, ChartTooltip, ChartTooltipContent } from "@/components/ui/chart"

type DataPoint = [string, number[], number[]]

interface LineConfig {
  label: string
}

interface MultiLineChartProps {
  data: DataPoint[]
  lines: LineConfig[]
  title: string
  description?: string
}

const colors = [
  "hsl(var(--primary))",
  "hsl(var(--secondary))",
  "hsl(var(--accent))",
  "hsl(var(--destructive))",
  "hsl(var(--muted))",
  "hsl(0, 100%, 50%)",   // Red
  "hsl(120, 100%, 25%)", // Dark Green
  "hsl(240, 100%, 50%)", // Blue
  "hsl(60, 100%, 50%)",  // Yellow
  "hsl(300, 100%, 25%)", // Purple
  "hsl(180, 100%, 25%)", // Teal
  "hsl(30, 100%, 50%)",  // Orange
  "hsl(330, 100%, 50%)", // Pink
  "hsl(90, 100%, 25%)",  // Lime
  "hsl(210, 100%, 50%)", // Sky Blue
  "hsl(0, 0%, 0%)",      // Black
  "hsl(0, 0%, 75%)",     // Light Gray
  "hsl(45, 100%, 50%)",  // Gold
  "hsl(270, 100%, 50%)", // Indigo
  "hsl(15, 100%, 50%)",  // Vermilion
]

export function MultiLineChart({ data, lines, title, description }: MultiLineChartProps) {
  const formattedData = data[0][1].map((_, index) => {
    const obj: { [key: string]: string | number } = { xAxis: data[0][1][index] }
    lines.forEach((line, lineIndex) => {
      obj[line.label] = data[lineIndex + 1][2][index]
    })
    return obj
  })

  const config = lines.reduce((acc, line, index) => {
    acc[line.label] = {
      label: line.label,
      color: colors[index % colors.length],
    }
    return acc
  }, {} as Record<string, { label: string; color: string }>)

  return (
    <Card className="w-full">
      <CardHeader>
        <CardTitle>{title}</CardTitle>
        {description && <CardDescription>{description}</CardDescription>}
      </CardHeader>
      <CardContent>
        <ChartContainer config={config} className="w-full" style={{ aspectRatio: '3/2' }}>
          <ResponsiveContainer width="100%" height="100%">
            <LineChart data={formattedData} margin={{ top: 10, right: 10, left: 10, bottom: 20 }}>
              <CartesianGrid strokeDasharray="3 3" />
              <XAxis
                dataKey="xAxis"
                tickLine={false}
                axisLine={false}
                tickMargin={8}
                tick={{ fill: 'hsl(var(--foreground))' }}
              />
              <YAxis
                tickLine={false}
                axisLine={false}
                tickMargin={8}
                tick={{ fill: 'hsl(var(--foreground))' }}
                width={40}
              />
              <ChartTooltip content={<ChartTooltipContent />} />
              {lines.map((line, index) => (
                <Line
                  key={line.label}
                  type="monotone"
                  dataKey={line.label}
                  stroke={colors[index % colors.length]}
                  strokeWidth={2}
                  dot={{ fill: colors[index % colors.length], strokeWidth: 2 }}
                />
              ))}
            </LineChart>
          </ResponsiveContainer>
        </ChartContainer>
      </CardContent>
    </Card>
  )
}

// v2 page
import { MultiLineChart } from "@/components/multi-line-chart"

const data: [string, number[], number[]][] = [
  ["Months", [1, 2, 3, 4, 5, 6, 7], []], // x-axis data
  ["Sales", [], [4000, 3000, 2000, 2780, 1890, 2390, 3490]],
  ["Profit", [], [2400, 1398, 9800, 3908, 4800, 3800, 4300]],
  ["Revenue", [], [2400, 2210, 2290, 2000, 2181, 2500, 2100]],
  ["Expenses", [], [1800, 2000, 2100, 2300, 2000, 1900, 2200]],
  ["Growth", [], [10, 15, 8, 12, 20, 18, 25]],
]

const lines = [
  { label: "Sales" },
  { label: "Profit" },
  { label: "Revenue" },
  { label: "Expenses" },
  { label: "Growth" },
]

export default function Page() {
  return (
    <div className="container mx-auto p-4">
      <MultiLineChart
        data={data}
        lines={lines}
        title="Company Performance"
        description="Monthly sales, profit, revenue, expenses, and growth data"
      />
    </div>
  )
}

